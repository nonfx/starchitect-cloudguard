package rules.azure_defender_containers_vulnerability_assessment

import data.fugue

__rego__metadoc__ := {
    "id": "3.1.4.3",
    "title": "Ensure that 'Agentless container vulnerability assessment' component status is 'On'",
    "description": "Enable automatic vulnerability management for images stored in ACR or running in AKS clusters.",
    "custom": {"controls":{"CIS_Microsoft_Azure_Foundations_Benchmark_v3.0.0":["CIS_Microsoft_Azure_Foundations_Benchmark_v3.0.0_3.1.4.3"]},"severity":"High"},
}

resource_type := "MULTIPLE"

# Get all security center subscriptions
security_center_subs = fugue.resources("azurerm_security_center_subscription_pricing")

# Helper to check if vulnerability assessment is enabled
is_vulnerability_assessment_enabled(sub) {
    sub.resource_type == "ContainerRegistry"
    sub.tier == "Standard"
    sub.extension[_].name == "ContainerRegistriesVulnerabilityAssessments"
}

# Allow if vulnerability assessment is enabled
policy[p] {
    sub := security_center_subs[_]
    is_vulnerability_assessment_enabled(sub)
    p = fugue.allow_resource(sub)
}

# Deny if vulnerability assessment is not enabled
policy[p] {
    sub := security_center_subs[_]
    not is_vulnerability_assessment_enabled(sub)
    p = fugue.deny_resource_with_message(sub, "Agentless container vulnerability assessment must be enabled in Microsoft Defender for Containers")
}

# Deny if no security center subscription pricing is configured
policy[p] {
    count(security_center_subs) == 0
    p = fugue.missing_resource_with_message("azurerm_security_center_subscription_pricing", "No Microsoft Defender for Containers configuration found")
}